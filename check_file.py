STATIC_SIGNATURE = [('23 21', ''), ('00 00 02 00 06 04 06 00 08 00 00 00 00 00', 'wk1'), ('00 00 1A 00 00 10 04 00 00 00 00 00', 'wk3'), ('00 00 1A 00 02 10 04 00 00 00 00 00', 'wk4 wk5'), ('00 00 1A 00 05 10 04', '123'), ('00 00 03 F3', ''), ('00 00 49 49 58 50 52(little-endian)00 00 4D 4D 58 50 52(big-endian)', 'qxd'), ('50 57 53 33', 'psafe3'), ('D4 C3 B2 A1(little-endian)', 'pcap'), ('4D 3C B2 A1(little-endian)', 'pcap'), ('0A 0D 0D 0A', 'pcapng'), ('ED AB EE DB', 'rpm'), ('53 51 4C 69 74 65 20 666F 72 6D 61 74 20 33 00', 'sqlitedb sqlite db'), ('53 50 30 31', 'bin'), ('49 57 41 44', 'wad'), ('00', 'PIC PIF SEA YTR'), ('00 00 00 00 00 00 00 0000 00 00 00 00 00 00 0000 00 00 00 00 00 00 00', 'PDB'), ('BE BA FE CA', 'DBA'), ('00 01 42 44', 'DBA'), ('00 01 44 54', 'TDA'), ('54 44 46 24', 'TDF$'), ('54 44 45 46', 'TDEF'), ('00 01 00 00', ''), ('00 00 01 00', 'ico'), ('69 63 6e 73', 'icns'), ('66 74 79 70 33 67', '3gp 3g2'), ('66 74 79 70 68 65 69 666 74 79 70 6d', 'heic'), ('1F 9D', 'z tar.z'), ('1F A0', 'z tar.z'), ('2D 68 6C 30 2D', 'lzh'), ('2D 68 6C 35 2D', 'lzh'), ('42 41 43 4B 4D 49 4B 4544 49 53 4B', 'bac'), ('49 4E 44 58', 'idx'), ('62 70 6C 69 73 74', 'plist'), ('42 5A 68', 'bz2'), ('47 49 46 38 37 6147 49 46 38 39 61', 'gif'), ('49 49 2A 00(little-endian)', 'tif tiff'), ('49 49 2A 00 10 00 00 0043 52', 'cr2'), ('80 2A 5F D7', 'cin'), ('52 4E 43 0152 4E 43 02', ''), ('4E 55 52 55 49 4D 474E 55 52 55 50 41 4C', 'nui nup'), ('53 44 50 58(big-endianformat)', 'dpx'), ('76 2F 31 01', 'exr'), ('42 50 47 FB', 'bpg'), ('FF D8 FF DB', 'jpg jpeg'), ('FF D8 FF E0', 'jpg'), ('00 00 00 0C 6A 50 20 20 0D 0A 87 0A', 'jp2 j2k jpf jpm jpg2 j2c jpc jpx mj2'), ('71 6f 69 66', 'qoi'), ('46 4F 52 4D\xa0??\xa0??\xa0??\xa0??49 4C 42 4D', 'ilbm lbm ibm iff'), ('46 4F 52 4D\xa0??\xa0??\xa0??\xa0??38 53 56 58', '8svx 8sv svx snd iff'), ('46 4F 52 4D\xa0??\xa0??\xa0??\xa0??41 43 42 4D', 'acbm iff'), ('46 4F 52 4D\xa0??\xa0??\xa0??\xa0??41 4E 42 4D', 'anbm iff'), ('46 4F 52 4D\xa0??\xa0??\xa0??\xa0??41 4E 49 4D', 'anim iff'), ('46 4F 52 4D\xa0??\xa0??\xa0??\xa0??46 41 58 58', 'faxx fax iff'), ('46 4F 52 4D\xa0??\xa0??\xa0??\xa0??46 54 58 54', 'ftxt iff'), ('46 4F 52 4D\xa0??\xa0??\xa0??\xa0??53 4D 55 53', 'smus smu mus iff'), ('46 4F 52 4D\xa0??\xa0??\xa0??\xa0??43 4D 55 53', 'cmus mus iff'), ('46 4F 52 4D\xa0??\xa0??\xa0??\xa0??59 55 56 4E', 'yuvn yuv iff'), ('46 4F 52 4D\xa0??\xa0??\xa0??\xa0??46 41 4E 54', 'iff'), ('46 4F 52 4D\xa0??\xa0??\xa0??\xa0??41 49 46 46', 'aiff aif aifc snd iff'), ('4C 5A 49 50', 'lz'), ('30 37 30 37 30 37', 'cpio'), ('4D 5A', 'exe dll mui sys scr cpl ocx ax iec ime rs tsp fon efi'), ('5A 4D', 'exe'), ('50 4B 03 0450 4B 05 06(empty archive)50 4B 07 08(spanned archive)', 'zip aar apk docx epub ipa jar kmz maff msix odp ods odt pk3 pk4 pptx usdz vsdx xlsx xpi'), ('52 61 72 21 1A 07 00', 'rar'), ('52 61 72 21 1A 07 01 00', 'rar'), ('7F 45 4C 46', ''), ('89 50 4E 47 0D 0A 1A 0A', 'png'), ('C9', 'com'), ('CA FE BA BE', 'class'), ('EF BB BF', 'txt others'), ('FF FE', 'txt others'), ('FE FF', 'txt others'), ('FF FE 00 00', 'txt others'), ('00 00 FE FF', 'txt others'), ('2B 2F 76 382B 2F 76 392B 2F 76 2B2B 2F 76 2F', ''), ('0E FE FF', 'txt others'), ('DD 73 66 73', ''), ('FE ED FA CE', ''), ('FE ED FA CF', ''), ('FE ED FE ED', ''), ('CE FA ED FE', ''), ('CF FA ED FE', ''), ('25 21 50 53', 'ps'), ('25 21 50 53 2D 41 64 6F 62 65 2D 33 2E 30 20 45 50 53 46 2D 33 2E 30', 'eps epsf'), ('25 21 50 53 2D 41 64 6F 62 65 2D 33 2E 31 20 45 50 53 46 2D 33 2E 30', 'eps epsf'), ('49 54 53 46 03 00 00 0060 00 00 00', 'chm'), ('3F 5F', 'hlp'), ('25 50 44 46 2D', 'pdf'), ('30 26 B2 75 8E 66 CF 11A6 D9 00 AA 00 62 CE 6C', 'asf wma wmv'), ('24 53 44 49 30 30 30 31', ''), ('4F 67 67 53', 'ogg oga ogv'), ('38 42 50 53', 'psd'), ('52 49 46 46\xa0??\xa0??\xa0??\xa0??57 41 56 45', 'wav'), ('52 49 46 46\xa0??\xa0??\xa0??\xa0??41 56 49 20', 'avi'), ('FF FBFF F3FF F2', 'mp3'), ('49 44 33', 'mp3'), ('42 4D', 'bmp dib'), ('43 44 30 30 31', 'iso'), ('43 44 30 30 31', 'cdi'), ('6D 61 69 6E 2E 62 73', 'mgw'), ('4E 45 53', 'nes'), ('A0 32 41 A0 A0 A0', 'd64'), ('47 53 52 2D 31 35 34 31', 'g64'), ('A0 33 44 A0 A0', 'd81'), ('43 36 34 20 74 61 70 65 20 69 6D 61 67 65 20 66 69 6C 65', 't64'), ('43 36 34 20 43 41 52 54 52 49 44 47 45 20 20 20', 'crt'), ('53 49 4D 50 4C 45 20 203D 20 20 20 20 20 20 2020 20 20 20 20 20 20 2020 20 20 20 20 54', 'fits'), ('66 4C 61 43', 'flac'), ('4D 54 68 64', 'mid midi'), ('D0 CF 11 E0 A1 B1 1A E1', 'doc xls ppt msi msg'), ('64 65 78 0A 30 33 35 00', 'dex'), ('4B 44 4D', 'vmdk'), ('23 20 44 69 73 6B 20 44 65 73 63 72 69 70 74 6F', 'vmdk'), ('43 72 32 34', 'crx'), ('41 47 44 33', 'fh8'), ('05 07 00 00 42 4F 42 4F05 07 00 00 00 00 00 0000 00 00 00 00 01', 'cwk'), ('06 07 E1 00 42 4F 42 4F06 07 E1 00 00 00 00 0000 00 00 00 00 01', 'cwk'), ('45 52 02 00 00 00', 'toast'), ('6B 6F 6C 79', 'dmg'), ('78 61 72 21', 'xar'), ('50 4D 4F 43 43 4D 4F 43', 'dat'), ('4E 45 53 1A', 'nes'), ('75 73 74 61 72 00 30 3075 73 74 61 72 20 20 00', 'tar'), ('4F 41 52\xa0??', 'oar'), ('74 6F 78 33', 'tox'), ('4D 4C 56 49', 'MLV'), ('44 43 4D 01 50 41 33 3050 41 33 30', ''), ('37 7A BC AF 27 1C', '7z'), ('1F 8B', 'gz tar.gz'), ('FD 37 7A 58 5A 00', 'xz tar.xz'), ('04 22 4D 18', 'lz4'), ('4D 53 43 46', 'cab'), ('53 5A 44 44 88 F0 27 33', '?? _'), ('46 4C 49 46', 'flif'), ('1A 45 DF A3', 'mkv mka mks mk3d webm'), ('4D 49 4C 20', 'stg'), ('41 54 26 54 46 4F 52 4D??\xa0??\xa0??\xa0?? 44 4A 56', 'djvu djv'), ('30 82', 'der'), ('2D 2D 2D 2D 2D 42 45 47 49 4E 20 43 45 52 54 49 46 49 43 41 54 45 2D 2D 2D 2D 2D', 'crt pem'), ('2D 2D 2D 2D 2D 42 45 47 49 4E 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2D 2D 2D 2D 2D', 'csr pem'), ('2D 2D 2D 2D 2D 42 45 47 49 4E 20 50 52 49 56 41 54 45 20 4B 45 59 2D 2D 2D 2D 2D', 'key pem'), ('2D 2D 2D 2D 2D 42 45 47 49 4E 20 44 53 41 20 50 52 49 56 41 54 45 20 4B 45 59 2D 2D 2D 2D 2D', 'key pem'), ('2D 2D 2D 2D 2D 42 45 47 49 4E 20 52 45 41 20 50 52 49 56 41 54 45 20 4B 45 59 2D 2D 2D 2D 2D', 'key pem'), ('50 75 54 54 59 2D 55 73 65 72 2D 4B 65 79 2D 46 69 6C 65 2D 32 3A', 'ppk'), ('50 75 54 54 59 2D 55 73 65 72 2D 4B 65 79 2D 46 69 6C 65 2D 33 3A', 'ppk'), ('2D 2D 2D 2D 2D 42 45 47 49 4E 20 4F 50 45 4E 53 53 48 20 50 52 49 56 41 54 45 20 4B 45 59 2D 2D 2D 2D 2D', ''), ('2D 2D 2D 2D 2D 42 45 47 49 4E 20 53 53 48 32 20 4B 45 59 2D 2D 2D 2D 2D', 'pub'), ('44 49 43 4D', 'dcm'), ('77 4F 46 46', 'woff'), ('77 4F 46 32', 'woff2'), ('3C 3F 78 6D 6C 20', 'xml'), ('00 61 73 6D', 'wasm'), ('CF 84 01', 'lep'), ('43 57 53', 'swf'), ('21 3C 61 72 63 68 3E 0A', 'deb'), ('52 49 46 46\xa0??\xa0??\xa0??\xa0??57 45 42 50', 'webp'), ('27 05 19 56', ''), ('7B 5C 72 74 66 31', 'rtf'), ('54 41 50 45', ''), ('47', 'ts tsv tsa mpg mpeg'), ('00 00 01 BA', 'm2p vob mpg mpeg'), ('00 00 01 B3', 'mpg mpeg'), ('66 74 79 70 69 73 6F 6D', 'mp4'), ('66 74 79 70 4D 53 4E 56', 'mp4'), ('78 01', 'zlib'), ('62 76 78 32', 'lzfse'), ('4F 52 43', 'orc'), ('4F 62 6A 01', 'avro'), ('53 45 51 36', 'rc'), ('3C 72 6F 62 6C 6F 78 21', 'rbxl'), ('65 87 78 56', 'p25 obt'), ('55 55 AA AA', 'pcv'), ('78 56 34', 'pbt pdt pea peb pet pgt pict pjt pkt pmt'), ('50 41 52 31', ''), ('45 4D 58 32', 'ez2'), ('45 4D 55 33', 'ez3 iso'), ('1B 4C 75 61', 'luac'), ('62 6F 6F 6B 00 00 00 006D 61 72 6B 00 00 00 00', 'alias'), ('5B 5A 6F 6E 65 54 72 616E 73 66 65 72 5D', 'Identifier'), ('52 65 63 65 69 76 65 643A', 'eml'), ('20 02 01 62 A0 1E AB 0702 00 00 00', 'tde'), ('37 48 03 02 00 00 00 0058 35 30 39 4B 45 59', 'kdb'), ('85\xa0??\xa0?? 03', 'pgp'), ('28 B5 2F FD', 'zst'), ('52 53 56 4B 44 41 54 41', 'rs'), ('3A 29 0A', 'sml'), ('4A 6F 79 21', ''), ('31 0A 30 30', 'srt'), ('34 12 AA 55', 'vpk'), ('2A 2A 41 43 45 2A 2A', 'ace'), ('60 EA', 'arj'), ('49 53 63 28', 'cab'), ('4B 57 41 4A', '??_'), ('53 5A 44 44', '??_'), ('5A 4F 4F', 'zoo'), ('50 31 0A', 'pbm'), ('50 34 0A', 'pbm'), ('50 32 0A', 'pgm'), ('50 35 0A', 'pgm'), ('50 33 0A', 'ppm'), ('50 36 0A', 'ppm'), ('D7 CD C6 9A', 'wmf'), ('67 69 6D 70 20 78 63 66', 'xcf'), ('2F 2A 20 58 50 4D 20 2A2F', 'xpm'), ('41 46 46', 'aff'), ('45 56 46 32', 'Ex01'), ('45 56 46', 'e01'), ('51 46 49', 'qcow'), ('52 49 46 46\xa0??\xa0??\xa0??\xa0??41 43 4F 4E', 'ani'), ('52 49 46 46\xa0??\xa0??\xa0??\xa0??43 44 44 41', 'cda'), ('52 49 46 46\xa0??\xa0??\xa0??\xa0??51 4C 43 4D', 'qcp'), ('52 49 46 58\xa0??\xa0??\xa0??\xa0??46 47 44 4D(big-endian)', 'dcr'), ('52 49 46 58\xa0??\xa0??\xa0??\xa0??4D 56 39 33(big-endian)', 'dir dxr drx'), ('46 4C 56', 'flv'), ('3C 3C 3C 20 4F 72 61 636C 65 20 56 4D 20 56 6972 74 75 61 6C 42 6F 7820 44 69 73 6B 20 49 6D61 67 65 20 3E 3E 3E', 'vdi'), ('63 6F 6E 6E 65 63 74 6978', 'vhd'), ('76 68 64 78 66 69 6C 65', 'vhdx'), ('49 73 5A 21', 'isz'), ('44 41 41', 'daa'), ('4C 66 4C 65', 'evt'), ('45 6C 66 46 69 6C 65', 'evtx'), ('73 64 62 66', 'sdb'), ('50 4D 43 43', 'grp'), ('4B 43 4D 53', 'icm'), ('72 65 67 66', 'dat hiv'), ('21 42 44 4E', 'pst'), ('44 52 41 43 4F', 'drc'), ('47 52 49 42', 'grib grib2'), ('42 4C 45 4E 44 45 52', 'blend'), ('00 00 00 0C 4A 58 4C 20 0D 0A 87 0A', 'jxl'), ('00 01 00 00 00', 'ttf tte dfont'), ('4F 54 54 4F', 'otf'), ('23 25 4D 6F 64 75 6C 65', ''), ('4D 53 57 49 4D 00 00 00D0 00 00 00 00', 'wim swm esd'), ('21 2D 31 53 4C 4F 42 1F', 'slob'), ('AC ED', ''), ('43 72 65 61 74 69 76 65 20 56 6F 69 63 65 20 46 69 6C 65 1A 1A 00', 'voc'), ('2E 73 6E 64', 'au snd'), ('DB 0A CE 00', ''), ('48 5a 4c 52 00 00 00 18', 'hazelrules'), ('46 4C 68 64', 'flp'), ('31 30 4C 46', 'flm'), ('52 4b 4d 43 32 31 30', ''), ('00 01 00 00 4D 53 49 53 41 4D 20 44 61 74 61 62 61 73 65', 'mny'), ('00 01 00 00 53 74 61 6E 64 61 72 64 20 41 43 45 20 44 42', 'accdb'), ('00 01 00 00 53 74 61 6E 64 61 72 64 20 4A 65 74 20 44 42', 'mdb'), ('01 FF 02 04 03 02', 'drw'), ('02 64 73 73', 'dss'), ('03 64 73 73', 'dss'), ('03 00 00 00 41 50 50 52', 'adx'), ('06 06 ED F5 D8 1D 46 E5 BD 31 EF E7 FE 74 B7 1D', 'indd'), ('06 0E 2B 34 02 05 01 01 0D 01 02 01 01 02', 'mxf'), ('07 53 4B 46', 'skf'), ('07 64 74 32 64 64 74 64', 'dtd'), ('0A 16 6F 72 67 2E 62 69 74 63 6F 69 6E 2E 70 72', 'wallet'), ('0D 44 4F 43', 'doc'), ('0E 4E 65 72 6F 49 53 4F', 'nri'), ('0E 57 4B 53', 'wks'), ('0F 53 49 42 45 4C 49 55 53', 'sib'), ('23 20 4D 69 63 72 6F 73 6F 66 74 20 44 65 76 65 6C 6F 70 65 72 20 53 74 75 64 69 6F', 'dsp'), ('23 21 41 4D 52', 'amr'), ('23 21 53 49 4C 4B 0A', 'sil'), ('23 3F 52 41 44 49 41 4E 43 45 0A', 'hdr'), ('23 40 7E 5E', 'vbe'), ('0D F0 1D C0', 'cdb'), ('23 45 58 54 4D 33 55', 'm3u m3u8'), ('6D 64 66 00', 'm'), ('4B 50 4B 41', 'pak'), ('41 52 43', 'arc'), ('D0 4F 50 53', 'pl'), ('6E 2B 31 00', 'nii'), ('6E 69 31 00', 'hdr'), ('52 41 46 36 34', ''), ('56 49 53 33', ''), ('4D 53 48 7C42 53 48 7C', 'hl7')]


#pip install requests
import requests

#pip install beautifulsoup4
from bs4 import BeautifulSoup

url = 'https://en.wikipedia.org/wiki/List_of_file_signatures'

def get_file_signatures(url):
    response = requests.get(url)
    if response.status_code == 200:
        soup = BeautifulSoup(response.text, 'html.parser')
        tables = soup.find_all('table', {'class': 'wikitable'})
        
        file_signatures = []
        
        for table in tables:
            rows = table.find_all('tr')[1:]  # Skip the header row
            for row in rows:
                columns = row.find_all(['td', 'th'])
                if len(columns) >= 5:
                    signature = columns[0].get_text(strip=True)
                    iso_8859_1 = columns[1].get_text(strip=True)
                    offset = columns[2].get_text(strip=True)
                    extension = ' '.join(columns[3].stripped_strings)
                    description = columns[4].get_text(strip=True)
                    file_signatures.append((signature, extension))
                    
        return file_signatures
        
    else:
        print(f"Failed to fetch data. Status code: {response.status_code}")


if __name__ == '__main__':
    signatures = get_file_signatures(url)
    print(len(signatures))
